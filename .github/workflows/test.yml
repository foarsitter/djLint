name: test
on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
    - dev

jobs:
  test_version:
    name: test update version
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: false

    - name: âŽ” Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: ðŸ“¥ Download deps
      uses: bahmutov/npm-install@v1
      with:
        useLockFile: false
    - name: test
      run: node scripts/updateVersion.js 1.2.3
  test:
    name: python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
      fail-fast: true

    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: setup python ${{ matrix.python-version }} on ${{ matrix.os }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: setup poetry
      uses: abatilo/actions-poetry@v2
      with:
        poetry-version: 1.2.2
    - name: install deps
      run: poetry install
    - name: test
      run: poetry run tox -e test
    - name: upload cov
      uses: codecov/codecov-action@v3
      continue-on-error: true
      with:
        files: ./coverage.xml
        fail_ci_if_error: false
        verbose: true

  test_alpine:
    name: python ${{ matrix.python-version }} on alpine-latest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
      fail-fast: true
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - uses: jirutka/setup-alpine@v1
    - name: setup python ${{ matrix.python-version }} on ${{ matrix.os }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: setup poetry
      uses: abatilo/actions-poetry@v2
      with:
        poetry-version: 1.2.2
    - name: install deps
      run: poetry install
    - name: test
      run: poetry run tox -e test
    - name: upload cov
      uses: codecov/codecov-action@v3
      continue-on-error: true
      with:
        files: ./coverage.xml
        fail_ci_if_error: false
        verbose: true

  test_npm:
    name: node ${{ matrix.node }} with python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      # remove macos, can't get xcode working yet for installing regex
      # remove windows-latest, half tests seem to randomly pass
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        node: [18, 19]
      fail-fast: true

    steps:
    - name: install xcode
      if: ${{ matrix.os == 'macos-latest' }}
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    - name: install xcode cli tools
      if: ${{ matrix.os == 'macos-latest' }}
      run: sudo xcode-select --reset
    - name: checkout
      uses: actions/checkout@v4
    - name: setup python ${{ matrix.python-version }} on ${{ matrix.os }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: setup node ${{ matrix.node }} on ${{ matrix.os }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node }}

    - name: install project
      run: npm --omit=dev install
    - name: test run help
      run: djlint -h
    - name: test run lint
      run: echo "<div>a</div>" | djlint -
    - name: test run check
      run: echo "<div>" | djlint - --check
